/* ******************************************************************************************************* EJ 1*/

function checkScope() {
  let i = "function scope";
  if (true) {
    let i = "block scope";
    console.log("Block scope i is: ", i);
  }
  console.log("Function scope i is: ", i);
  return i;
}

/* ******************************************************************************************************* EJ 2*/

const s = [5, 7, 2];
function editInPlace() {
  // Cambia solo el código debajo de esta línea

  // Usar s = [2, 5, 7] sería inválido
  s[0] = 2;
  s[1] = 5;
  s[2] = 7;
  // Cambia solo el código encima de esta línea
}
editInPlace();

/* ******************************************************************************************************* EJ 3*/

function freezeObj() {
  const MATH_CONSTANTS = {
    PI: 3.14,
  };
  // Cambia solo el código debajo de esta línea
  Object.freeze(MATH_CONSTANTS);
  // Cambia solo el código encima de esta línea
  try {
    MATH_CONSTANTS.PI = 99;
  } catch (ex) {
    console.log(ex);
  }
  return MATH_CONSTANTS.PI;
}
const PI = freezeObj();

/* ******************************************************************************************************* EJ 4*/

const magic = () => new Date();

/* ******************************************************************************************************* EJ 5*/

const myConcat = (arr1, arr2) => arr1.concat(arr2);

console.log(myConcat([1, 2], [3, 4, 5]));

/* ******************************************************************************************************* EJ 6*/

const increment = (number, value = 1) => number + value;

/* ******************************************************************************************************* EJ 7*/

const sum = (...args) => {
  return args.reduce((a, b) => a + b, 0);
};

/* ******************************************************************************************************* EJ 8*/
const arr1 = ["JAN", "FEB", "MAR", "APR", "MAY"];
let arr2;

arr2 = [...arr1]; // Cambia esta línea

console.log(arr2);

/* ******************************************************************************************************* EJ 9*/

const HIGH_TEMPERATURES = {
  yesterday: 75,
  today: 77,
  tomorrow: 80,
};

const { today, tomorrow } = HIGH_TEMPERATURES;

/* ******************************************************************************************************* EJ 10*/

const HIGH_TEMPERATURES = {
  yesterday: 75,
  today: 77,
  tomorrow: 80,
};

const { today: highToday, tomorrow: highTomorrow } = HIGH_TEMPERATURES;

/* ******************************************************************************************************* EJ 11*/

const LOCAL_FORECAST = {
  yesterday: { low: 61, high: 75 },
  today: { low: 64, high: 77 },
  tomorrow: { low: 68, high: 80 },
};

const {
  today: { low: lowToday, high: highToday },
} = LOCAL_FORECAST;

/* ******************************************************************************************************* EJ 12*/

let a = 8,
  b = 6;
// Cambia solo el código debajo de esta línea
[a, b] = [b, a];

/* ******************************************************************************************************* EJ 13*/

function removeFirstTwo(list) {
  // Cambia solo el código debajo de esta línea
  const [a, b, ...shorterList] = list; // Cambia esta línea
  // Cambia solo el código encima de esta línea
  return shorterList;
}

const source = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
const sourceWithoutFirstTwo = removeFirstTwo(source);

/* ******************************************************************************************************* EJ 14*/

const stats = {
  max: 56.78,
  standard_deviation: 4.34,
  median: 34.54,
  mode: 23.87,
  min: -0.75,
  average: 35.85,
};

const half = ({ max, min }) => (max + min) / 2.0;

/* ******************************************************************************************************* EJ 15*/

const result = {
  success: ["max-length", "no-amd", "prefer-arrow-functions"],
  failure: ["no-var", "var-on-top", "linebreak"],
  skipped: ["no-extra-semi", "no-dup-keys"],
};
function makeList(arr) {
  // Cambia solo el código debajo de esta línea
  const failureItems = arr.map(
    (item) => `<li class="text-warning">${item}</li>`
  );
  // Cambia solo el código encima de esta línea

  return failureItems;
}

const failuresList = makeList(result.failure);

/* ******************************************************************************************************* EJ 16*/

/* ******************************************************************************************************* EJ 17*/
/* ******************************************************************************************************* EJ 18*/
/* ******************************************************************************************************* EJ 19*/
/* ******************************************************************************************************* EJ 20*/
/* ******************************************************************************************************* EJ 21*/
/* ******************************************************************************************************* EJ 22*/
/* ******************************************************************************************************* EJ 23*/
/* ******************************************************************************************************* EJ 24*/
/* ******************************************************************************************************* EJ 25*/
/* ******************************************************************************************************* EJ 26*/
/* ******************************************************************************************************* EJ 27*/
/* ******************************************************************************************************* EJ 28*/
/* ******************************************************************************************************* EJ 29*/
